// Code generated by MockGen. DO NOT EDIT.
// Source: src/service/health.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "TemplateApi/src/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHealthReporter is a mock of HealthReporter interface
type MockHealthReporter struct {
	ctrl     *gomock.Controller
	recorder *MockHealthReporterMockRecorder
}

// MockHealthReporterMockRecorder is the mock recorder for MockHealthReporter
type MockHealthReporterMockRecorder struct {
	mock *MockHealthReporter
}

// NewMockHealthReporter creates a new mock instance
func NewMockHealthReporter(ctrl *gomock.Controller) *MockHealthReporter {
	mock := &MockHealthReporter{ctrl: ctrl}
	mock.recorder = &MockHealthReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHealthReporter) EXPECT() *MockHealthReporterMockRecorder {
	return m.recorder
}

// Heartbeat mocks base method
func (m *MockHealthReporter) Heartbeat() (*models.HeartbeatResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Heartbeat")
	ret0, _ := ret[0].(*models.HeartbeatResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Heartbeat indicates an expected call of Heartbeat
func (mr *MockHealthReporterMockRecorder) Heartbeat() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Heartbeat", reflect.TypeOf((*MockHealthReporter)(nil).Heartbeat))
}
